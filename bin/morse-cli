#!/usr/bin/env python
import regex
from morse import Morse


def header():
    print("MORSE-CLI, Version 1.0.0")
    print("Convert English text to Morse code or vice versa")
    print(" - We will detect your input format automatically")
    # Ask input and output files
    input_file = input(" - Input file: ")
    output_file = input(" - Output file: ")
    print("")
    # Ask dot and dash
    print("Give dot and dash characters for morse code, leave empty if use default")
    dot = input(" - Dot(.): ")
    if dot == "":
        dot = '.'
    dash = input(" - Dash(-): ")
    if dash == "":
        dash = "-"
    print("")
    # Create converter
    converter = Morse(dot=dot, dash=dash)

    return input_file, output_file, converter


def process_input(file: str, converter: Morse) -> str:
    print("Processing input file")
    data = ""
    # Read file
    try:
        with open(file, "r", encoding="utf-8") as fh:
            # Read data to string
            data = fh.read()
    except FileNotFoundError:
        print("ABORT: Input file not found")
        exit(-1)
    # Remove whitespace
    pattern = regex.compile(r"\s+")
    data = regex.sub(pattern, '', data)
    if converter.is_morse_code(data):
        print(" - Input type: Morse code")
        try:
            return converter.morse_to_english(data)
        except ValueError:
            print("ABORT: Invalid morse code")
            print(" - There shall be a dot between characters")
            print(" - There shall be no two dots in a row")
            exit(-1)
    else:
        print(" - Input type: English text")
        try:
            return converter.english_to_morse(data)
        except ValueError:
            print("ABORT: Invalid characters in text")
            print(" - Only english alphabets, digits and special characters .,?@ are allowed")
            exit(-1)


def main():
    # Print header and ask input and output
    input_file, output_file, converter = header()

    # Process input
    data = process_input(input_file, converter)
    # Process output
    print("Processing output file")
    with open(output_file, "w", encoding="utf-8") as fh:
        # Write data to file
        fh.write(data)
    # Everything OK
    print("Done")
    return 0


if __name__ == '__main__':
    main()
